# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := BUILD
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Boiler-plate
###############################################################################
# Project settings

PROJECT := Websocket_Ethernet_HelloWorld_W5500


# Project settings
###############################################################################
# Objects and Paths

OBJECTS += modules/MQTTPacket/MQTTConnectClient.o
OBJECTS += modules/MQTTPacket/MQTTConnectServer.o
OBJECTS += modules/MQTTPacket/MQTTDeserializePublish.o
OBJECTS += modules/MQTTPacket/MQTTPacket.o
OBJECTS += modules/MQTTPacket/MQTTSerializePublish.o
OBJECTS += modules/MQTTPacket/MQTTSubscribeClient.o
OBJECTS += modules/MQTTPacket/MQTTSubscribeServer.o
OBJECTS += modules/MQTTPacket/MQTTUnsubscribeClient.o
OBJECTS += modules/MQTTPacket/MQTTUnsubscribeServer.o
OBJECTS += modules/W5500Interface/DHCPClient/DHCPClient.o
OBJECTS += modules/W5500Interface/DNSClient/DNSClient.o
OBJECTS += modules/W5500Interface/EthernetInterface.o
OBJECTS += modules/W5500Interface/Socket/Endpoint.o
OBJECTS += modules/W5500Interface/Socket/Socket.o
OBJECTS += modules/W5500Interface/Socket/TCPSocketConnection.o
OBJECTS += modules/W5500Interface/Socket/TCPSocketServer.o
OBJECTS += modules/W5500Interface/Socket/UDPSocket.o
OBJECTS += modules/W5500Interface/WIZnet/W5500.o
OBJECTS += modules/RTT/SEGGER_RTT.o
OBJECTS += modules/RTT/SEGGER_RTT_printf.o
OBJECTS += modules/DHT22/dht22.o
OBJECTS += main.o
OBJECTS += mbed-rtos/rtos/Mutex.o
OBJECTS += mbed-rtos/rtos/RtosTimer.o
OBJECTS += mbed-rtos/rtos/Semaphore.o
OBJECTS += mbed-rtos/rtos/Thread.o
OBJECTS += mbed-rtos/rtx/HAL_CM.o
OBJECTS += mbed-rtos/rtx/RTX_Conf_CM.o
OBJECTS += mbed-rtos/rtx/TARGET_M0/TOOLCHAIN_GCC/HAL_CM0.o
OBJECTS += mbed-rtos/rtx/TARGET_M0/TOOLCHAIN_GCC/SVC_Table.o
OBJECTS += mbed-rtos/rtx/rt_CMSIS.o
OBJECTS += mbed-rtos/rtx/rt_Event.o
OBJECTS += mbed-rtos/rtx/rt_List.o
OBJECTS += mbed-rtos/rtx/rt_Mailbox.o
OBJECTS += mbed-rtos/rtx/rt_MemBox.o
OBJECTS += mbed-rtos/rtx/rt_Mutex.o
OBJECTS += mbed-rtos/rtx/rt_Robin.o
OBJECTS += mbed-rtos/rtx/rt_Semaphore.o
OBJECTS += mbed-rtos/rtx/rt_System.o
OBJECTS += mbed-rtos/rtx/rt_Task.o
OBJECTS += mbed-rtos/rtx/rt_Time.o

 SYS_OBJECTS += mbed/TARGET_ARCH_BLE/TOOLCHAIN_GCC_ARM/board.o
 SYS_OBJECTS += mbed/TARGET_ARCH_BLE/TOOLCHAIN_GCC_ARM/cmsis_nvic.o
 SYS_OBJECTS += mbed/TARGET_ARCH_BLE/TOOLCHAIN_GCC_ARM/retarget.o
 SYS_OBJECTS += mbed/TARGET_ARCH_BLE/TOOLCHAIN_GCC_ARM/startup_NRF51822.o
 SYS_OBJECTS += mbed/TARGET_ARCH_BLE/TOOLCHAIN_GCC_ARM/system_nrf51822.o

INCLUDE_PATHS += -I../.
INCLUDE_PATHS += -I../modules/DHT22
INCLUDE_PATHS += -I../modules/MQTT
INCLUDE_PATHS += -I../modules/FP
INCLUDE_PATHS += -I../modules/RTT
INCLUDE_PATHS += -I../modules/MQTTPacket
INCLUDE_PATHS += -I../modules/W5500Interface
INCLUDE_PATHS += -I../modules/W5500Interface/DHCPClient
INCLUDE_PATHS += -I../modules/W5500Interface/DNSClient
INCLUDE_PATHS += -I../modules/W5500Interface/Socket
INCLUDE_PATHS += -I../modules/W5500Interface/WIZnet
INCLUDE_PATHS += -I../mbed
INCLUDE_PATHS += -I../mbed-rtos
INCLUDE_PATHS += -I../mbed-rtos/rtos
INCLUDE_PATHS += -I../mbed-rtos/rtx
INCLUDE_PATHS += -I../mbed/TARGET_ARCH_BLE
INCLUDE_PATHS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822
INCLUDE_PATHS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib
INCLUDE_PATHS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0
INCLUDE_PATHS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_API
INCLUDE_PATHS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_API/include
INCLUDE_PATHS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/TARGET_ARCH_BLE

LIBRARY_PATHS := -L../mbed/TARGET_ARCH_BLE/TOOLCHAIN_GCC_ARM 
LIBRARIES := -lmbed 
LINKER_SCRIPT ?= ../mbed/TARGET_ARCH_BLE/TOOLCHAIN_GCC_ARM/NRF51822.ld

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = arm-none-eabi-gcc
CC      = arm-none-eabi-gcc
CPP     = arm-none-eabi-g++
LD      = arm-none-eabi-gcc
ELF2BIN = arm-none-eabi-objcopy
PREPROC = arm-none-eabi-cpp -E -P -Wl,--gc-sections -Wl,--wrap,main --specs=nano.specs -mcpu=cortex-m0 -mthumb

SREC_CAT = srec_cat

C_FLAGS += -std=gnu99
C_FLAGS += -include
C_FLAGS += mbed_config.h
C_FLAGS += -D__CORTEX_M0
C_FLAGS += -DMBED_BUILD_TIMESTAMP=1544964379.92
C_FLAGS += -DNRF51
C_FLAGS += -DTARGET_MCU_NRF51_16K_S130
C_FLAGS += -DTARGET_LIKE_MBED
C_FLAGS += -DTARGET_NRF51822
C_FLAGS += -DDEVICE_PORTINOUT=1
C_FLAGS += -D__MBED_CMSIS_RTOS_CM
C_FLAGS += -D__CMSIS_RTOS
C_FLAGS += -DTARGET_MCU_NRF51_16K
C_FLAGS += -DTOOLCHAIN_GCC
C_FLAGS += -DDEVICE_SPISLAVE=1
C_FLAGS += -DTARGET_CORTEX_M
C_FLAGS += -DARM_MATH_CM0
C_FLAGS += -DTARGET_MCU_NRF51_16K_BASE
C_FLAGS += -DFEATURE_BLE=1
C_FLAGS += -DTARGET_M0
C_FLAGS += -DTARGET_MCU_NRF51
C_FLAGS += -DCMSIS_VECTAB_VIRTUAL
C_FLAGS += -DDEVICE_SERIAL=1
C_FLAGS += -D__MBED__=1
C_FLAGS += -DTARGET_CORTEX
C_FLAGS += -DDEVICE_I2C=1
C_FLAGS += -DDEVICE_PORTOUT=1
C_FLAGS += -DTARGET_ARCH_BLE
C_FLAGS += -DTARGET_FF_ARDUINO
C_FLAGS += -DTARGET_RELEASE
C_FLAGS += -DTARGET_NORDIC
C_FLAGS += -DTARGET_MCU_NORDIC_16K
C_FLAGS += -DDEVICE_PORTIN=1
C_FLAGS += -DDEVICE_SLEEP=1
C_FLAGS += -DTOOLCHAIN_GCC_ARM
C_FLAGS += -DTARGET_MCU_NRF51822
C_FLAGS += -DDEVICE_SPI=1
C_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"
C_FLAGS += -DDEVICE_INTERRUPTIN=1
C_FLAGS += -DTARGET_ARCH_LINK
C_FLAGS += -DDEVICE_ANALOGIN=1
C_FLAGS += -DDEVICE_PWMOUT=1
C_FLAGS += -DTARGET_LIKE_CORTEX_M0
C_FLAGS += -include
C_FLAGS += mbed_config.h
C_FLAGS += -std=gnu99
C_FLAGS += -c
C_FLAGS += -Wall
C_FLAGS += -Wextra
C_FLAGS += -Wno-unused-parameter
C_FLAGS += -Wno-missing-field-initializers
C_FLAGS += -fmessage-length=0
C_FLAGS += -fno-exceptions
C_FLAGS += -fno-builtin
C_FLAGS += -ffunction-sections
C_FLAGS += -fdata-sections
C_FLAGS += -funsigned-char
C_FLAGS += -MMD
C_FLAGS += -fno-delete-null-pointer-checks
C_FLAGS += -fomit-frame-pointer
C_FLAGS += -Os
C_FLAGS += -g1
C_FLAGS += -DMBED_RTOS_SINGLE_THREAD
C_FLAGS += -mcpu=cortex-m0
C_FLAGS += -mthumb

CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h
CXX_FLAGS += -D__CORTEX_M0
CXX_FLAGS += -DMBED_BUILD_TIMESTAMP=1544964379.92
CXX_FLAGS += -DNRF51
CXX_FLAGS += -DTARGET_MCU_NRF51_16K_S130
CXX_FLAGS += -DTARGET_LIKE_MBED
CXX_FLAGS += -DTARGET_NRF51822
CXX_FLAGS += -DDEVICE_PORTINOUT=1
CXX_FLAGS += -D__MBED_CMSIS_RTOS_CM
CXX_FLAGS += -D__CMSIS_RTOS
CXX_FLAGS += -DTARGET_MCU_NRF51_16K
CXX_FLAGS += -DTOOLCHAIN_GCC
CXX_FLAGS += -DDEVICE_SPISLAVE=1
CXX_FLAGS += -DTARGET_CORTEX_M
CXX_FLAGS += -DARM_MATH_CM0
CXX_FLAGS += -DTARGET_MCU_NRF51_16K_BASE
CXX_FLAGS += -DFEATURE_BLE=1
CXX_FLAGS += -DTARGET_M0
CXX_FLAGS += -DTARGET_MCU_NRF51
CXX_FLAGS += -DCMSIS_VECTAB_VIRTUAL
CXX_FLAGS += -DDEVICE_SERIAL=1
CXX_FLAGS += -D__MBED__=1
CXX_FLAGS += -DTARGET_CORTEX
CXX_FLAGS += -DDEVICE_I2C=1
CXX_FLAGS += -DDEVICE_PORTOUT=1
CXX_FLAGS += -DTARGET_ARCH_BLE
CXX_FLAGS += -DTARGET_FF_ARDUINO
CXX_FLAGS += -DTARGET_RELEASE
CXX_FLAGS += -DTARGET_NORDIC
CXX_FLAGS += -DTARGET_MCU_NORDIC_16K
CXX_FLAGS += -DDEVICE_PORTIN=1
CXX_FLAGS += -DDEVICE_SLEEP=1
CXX_FLAGS += -DTOOLCHAIN_GCC_ARM
CXX_FLAGS += -DTARGET_MCU_NRF51822
CXX_FLAGS += -DDEVICE_SPI=1
CXX_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"
CXX_FLAGS += -DDEVICE_INTERRUPTIN=1
CXX_FLAGS += -DTARGET_ARCH_LINK
CXX_FLAGS += -DDEVICE_ANALOGIN=1
CXX_FLAGS += -DDEVICE_PWMOUT=1
CXX_FLAGS += -DTARGET_LIKE_CORTEX_M0
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h
CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -c
CXX_FLAGS += -Wall
CXX_FLAGS += -Wextra
CXX_FLAGS += -Wno-unused-parameter
CXX_FLAGS += -Wno-missing-field-initializers
CXX_FLAGS += -fmessage-length=0
CXX_FLAGS += -fno-exceptions
CXX_FLAGS += -fno-builtin
CXX_FLAGS += -ffunction-sections
CXX_FLAGS += -fdata-sections
CXX_FLAGS += -funsigned-char
CXX_FLAGS += -MMD
CXX_FLAGS += -fno-delete-null-pointer-checks
CXX_FLAGS += -fomit-frame-pointer
CXX_FLAGS += -Os
CXX_FLAGS += -g1
CXX_FLAGS += -DMBED_RTOS_SINGLE_THREAD
CXX_FLAGS += -mcpu=cortex-m0
CXX_FLAGS += -mthumb

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -D__CORTEX_M0
ASM_FLAGS += -DTARGET_MCU_NRF51_16K
ASM_FLAGS += -DNRF51
ASM_FLAGS += -DTARGET_MCU_NRF51_16K_S130
ASM_FLAGS += -DTARGET_ARCH_BLE
ASM_FLAGS += -DTARGET_NRF51822
ASM_FLAGS += -DARM_MATH_CM0
ASM_FLAGS += -D__MBED_CMSIS_RTOS_CM
ASM_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE="cmsis_nvic.h"
ASM_FLAGS += -DCMSIS_VECTAB_VIRTUAL
ASM_FLAGS += -D__CMSIS_RTOS
ASM_FLAGS += -DTARGET_MCU_NORDIC_16K
ASM_FLAGS += -I../.
ASM_FLAGS += -I../modules/MQTT
ASM_FLAGS += -I../modules/FP
ASM_FLAGS += -I../modules/MQTTPacket
ASM_FLAGS += -I../modules/W5500Interface
ASM_FLAGS += -I../modules/W5500Interface/DHCPClient
ASM_FLAGS += -I../modules/W5500Interface/DNSClient
ASM_FLAGS += -I../modules/W5500Interface/Socket
ASM_FLAGS += -I../modules/W5500Interface/WIZnet
ASM_FLAGS += -I../mbed
ASM_FLAGS += -I../mbed-rtos
ASM_FLAGS += -I../mbed-rtos/rtos
ASM_FLAGS += -I../mbed-rtos/rtx
ASM_FLAGS += -I../mbed/TARGET_ARCH_BLE
ASM_FLAGS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822
ASM_FLAGS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib
ASM_FLAGS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0
ASM_FLAGS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_API
ASM_FLAGS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_API/include
ASM_FLAGS += -I../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/TARGET_ARCH_BLE
ASM_FLAGS += -include
ASM_FLAGS += mbed_config.h
ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -c
ASM_FLAGS += -Wall
ASM_FLAGS += -Wextra
ASM_FLAGS += -Wno-unused-parameter
ASM_FLAGS += -Wno-missing-field-initializers
ASM_FLAGS += -fmessage-length=0
ASM_FLAGS += -fno-exceptions
ASM_FLAGS += -fno-builtin
ASM_FLAGS += -ffunction-sections
ASM_FLAGS += -fdata-sections
ASM_FLAGS += -funsigned-char
ASM_FLAGS += -MMD
ASM_FLAGS += -fno-delete-null-pointer-checks
ASM_FLAGS += -fomit-frame-pointer
ASM_FLAGS += -Os
ASM_FLAGS += -g1
ASM_FLAGS += -DMBED_RTOS_SINGLE_THREAD
ASM_FLAGS += -mcpu=cortex-m0
ASM_FLAGS += -mthumb


LD_FLAGS :=-Wl,--gc-sections -Wl,--wrap,main --specs=nano.specs -mcpu=cortex-m0 -mthumb 
LD_SYS_LIBS :=-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys -lmbed -Wl,--end-group

# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size

all: $(PROJECT).bin $(PROJECT)-combined.hex size


.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  


.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
  
	@$(AS) -c $(ASM_FLAGS) -o $@ $<
  

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).link_script.ld: $(LINKER_SCRIPT)
	@$(PREPROC) $< -o $@



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld 
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter-out %.o, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(ELF2BIN) -O binary $< $@


$(PROJECT).hex: $(PROJECT).elf
	$(ELF2BIN) -O ihex $< $@


$(PROJECT)-combined.hex: $(PROJECT).hex
	+@echo "NOTE: the $(SREC_CAT) binary is required to be present in your PATH. Please see http://srecord.sourceforge.net/ for more information."
	$(SREC_CAT) ../mbed/TARGET_ARCH_BLE/TARGET_NORDIC/TARGET_MCU_NRF51822/Lib/s110_nrf51822_7_0_0/s110_nrf51822_7.0.0_softdevice.hex  -intel $(PROJECT).hex -intel -o $(PROJECT)-combined.hex -intel --line-length=44
	+@echo "===== hex file ready to flash: $(OBJDIR)/$@ ====="

# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
